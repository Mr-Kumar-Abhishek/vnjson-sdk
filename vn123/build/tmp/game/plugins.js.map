{"version":3,"sources":["alias/index.js","click-handler/index.js","jump/index.js","main-menu/index.js","memory-card/index.js","screen/index.js","settings/script.js","start-game/script.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"plugins.js","sourcesContent":["vnjs.on('alias', function(data){\r\n  /*\r\n  let { character, reply, key } = data;\r\n  let nameBox = document.getElementById('name_box');\r\n  let textBox = document.getElementById('text_box');\r\n  nameBox.innerHTML = character.name;\r\n  nameBox.style.color = character.color;\r\n  textBox.innerHTML = reply;*/\r\n  console.log('aliase')\r\n});\r\n/*\r\n let {ctx, game, catalog, parse } = this;\r\n    let screen = document.getElementById(game.init.screen);\r\n\r\n\r\n      var speed = 0;\r\n  var i = 0;\r\n\r\n  \r\nif(speed != 0){\r\n\r\ntextBox.innerHTML = \"\";\r\n\r\n  function print(){\r\n   /* screen.removeEventListener('mousedown',function(){\r\n        parse(ctx, catalog);\r\n    },false);\r\n    textBox.innerHTML += reply[i];\r\n    \r\n    i++\r\n  \r\n    if(i>reply.length-1){\r\n      clearInterval(intId);\r\n      /*   screen.addEventListener('mousedown', function(){\r\n        parse(ctx, catalog);\r\n    }); \r\n    }\r\n\r\n  }\r\n  var intId = setInterval(print, speed);\r\n  */\r\n//}\r\n//else {\r\n   \r\n//} \r\n","vnjs.on('start-game', function(){\r\n/*\r\ndocument\r\n  .querySelector(\"#dialog_box\")\r\n  .addEventListener('mousedown', this.next);\r\n/*\r\nlet {ctx, game, catalog, parse } = this;\r\nlet dialogBox = document.querySelector('#dialog_box');\r\n  \r\n    let screen = document.querySelector(game.init.screen);\r\n     parse(ctx, catalog);   \r\n    dialogBox.addEventListener('mousedown', function(){\r\n        parse(ctx, catalog);\r\n    });*/\r\n/*var fps = 15;\r\nfunction draw() {\r\n    setTimeout(function() {\r\n        requestAnimationFrame(draw,screen);\r\n        // Drawing code goes here\r\n    }, 1000 / fps);\r\n};\r\ndraw();\r\nconsole.log('fps: '+fps);*/\r\n});","vnjs.on('jump', function (pathname){\r\nlet { getScene, ctx, game, next } = this;\r\n\r\n /*\r\n  * Если есть слэш в пути прыжка\r\n  * то это сцена, значит надо подружать\r\n  * ресурсы и т.д.\r\n  */\r\nlet isScene = /\\/\\w+/gi.test(pathname);//util.is('scene')\r\n\r\nif(isScene){\r\n\r\n  const pathArr = pathname.split('/');\r\n  ctx.num = 0;\r\n  ctx.scene = pathArr[0];\r\n  ctx.label  = pathArr[1];\r\n \r\n  getScene(ctx.scene);\r\n\r\n\r\n}\r\n  /*\r\n   * Если слэша нет, то это значит лабел.\r\n   * поэтому не надо делать лишних телодвижений\r\n   * а просто выполнить уже загруженный массив\r\n   */\r\nelse{\r\n \r\n   ctx.num = 0;\r\n   ctx.label = pathname;\r\n   ctx.arr = game.scenes[ctx.scene].labels[ctx.label];\r\n   next();\r\n};\r\n\r\n\r\n\r\n});","/*vnjs.on('screen', function(screenName){\r\n  document\r\n    .getElementById(screenName)\r\n    .style('display': \"block\")\r\n\r\n})\r\n*/\r\nvnjs.on('main-menu', function(e){\r\n  console.log('main-menu');\r\n})\r\n /* let { getScreen, emit, parse } = this;\r\n/*getScreen('main-menu.html', function(html){\r\n    document.getElementById('scene').innerHTML = html;\r\n    /*\r\n     * Здесь срабатывает autorun\r\n     */\r\n/*\r\n    emit('autorun', {name: 'autorun'});\r\n    /*\r\n     * Слушаем пункты меню.\r\n     *//*\r\ndocument\r\n  .querySelector(\"#start-game\")\r\n  .addEventListener('mousedown', function(){\r\n      parse({\r\n            \"screen\": \"start-game\"\r\n          });\r\n           /*\r\n            * Во время первого запуска нужно\r\n            * запустить точку входа.\r\n            * Здесь это и присходит. Ставлю обработчик\r\n            * события (jump) и передаю контекст\r\n            */\r\n            //emit.call(vnjs, 'start-game');\r\n            //emit.call(vnjs, 'jump', config.entry);\r\n     // });\r\n      /*\r\n        startGame.addEventListener('mouseove', function(){\r\n            howler.play();\r\n        })\r\n      */\r\n   /* \r\ndocument\r\n  .querySelector(\"#about\")\r\n  .addEventListener('mousedown', function(){\r\n          parse({\r\n            \"screen\": \"about\"\r\n          });\r\n      });\r\ndocument\r\n  .querySelector(\"#memory-card\")\r\n  .addEventListener('mousedown', function(){\r\n          parse({\r\n            \"screen\": \"memory-card\"\r\n          });\r\n      });\r\n\r\n\r\ndocument\r\n  .querySelector(\"#settings\")\r\n  .addEventListener('mousedown', function(){\r\n          parse({\r\n            \"screen\": \"settings\"\r\n          });\r\n      });\r\n\r\n//}); //getScreen\r\n}); //vnjs.on('main-menu')\r\n\r\nvnjs.on('about', function(){\r\n    this.parse({'scene':\"about\"});\r\n});\r\n\r\nvnjs.on('memory-card', function(){\r\n    this.parse({\"scene\":\"memory-card\"});\r\n});\r\n\r\nvnjs.on('settings', function(){\r\n    this.parse({\"scene\":\"settings\"});\r\n});\r\n\r\nvnjs.on('start-game', function(){\r\n  let { emit, config, next } = this;\r\n  emit.call(this, 'jump', config.entry);\r\n  vnjs.on('loaded', next);\r\n});\r\n/**\r\n * userscript\r\n */\r\n/*  vnjs.on('game-over', function(){\r\n    this.parse({\"scene\": \"gameover\"});\r\n  })\r\n\r\n/** ########\r\n Механизм screen\r\n\r\nв vnjson-cli&&sdk в плагинах все лежит в папке плагина\r\n\r\n+ plugin\r\n  - index.js\r\n  - main-menu.html\r\n  - main-menu.css  \r\n/////\r\n\r\nА когда происходит трансляция в конечный вид новеллы\r\nто все уже лежит по папкам\r\n +screens/\r\n  - main-menu\r\n +styles\r\n  - bundle.css\r\n +plugins\r\n  - bundle.js  \r\n\r\n*/\r\n\r\n","\r\nvnjs.on(function(){\r\n  let { ctx, ev } = this;\r\n  function save(data){\r\n    localforage.setItem(data.title, data, (err)=>{\r\n      if(err){\r\n        console.log(err);\r\n      }\r\n      console.log('Игра сохранена');\r\n       ev.emit('save');\r\n\r\n    });\r\n  };\r\n\r\n  function load(key){\r\n    localforage.getItem(key).then((data)=>{\r\n        console.log(key+\": has been loaded!\");\r\n        ev.emit('load');\r\n    }).catch(function (err) {\r\n          console.error(err);\r\n    });\r\n  };\r\n\r\nlet saveBtn = document.querySelector('#save-btn');\r\nlet loadBtn = document.querySelector('#load-btn');\r\n\r\nsaveBtn.addEventListener('mousedown', function(e){\r\n  e.preventDefault();\r\n  save({\r\n    scene: ctx.scene,\r\n    label: ctx.label,\r\n    num: ctx.num,\r\n    title: \"vnjson-demo-game\"\r\n  });\r\n});\r\n\r\nloadBtn.addEventListener('mousedown', function(e){\r\n  e.preventDefault();\r\n  load(\"vnjson-demo-game\");\r\n});\r\n\r\n});\r\n\r\n","\r\nvnjs.on('screen', function(e){\r\n console.log('screen - вызывается для того что бы display:block' ) \r\n  //let { emit, option} = this;\r\n  /**\r\n\r\n  {about:{scene: 'background' }}\r\n  vnjs.on('about')\r\n  */\r\n/*  get(e+\".html\", function(html){\r\n    document.querySelector(config.screen).innerHTML = html;\r\n    emit(e);\r\n  });*/\r\n  /*let html = document.getElementById(\"main-menu\").innerHTML;\r\n  console.log(html)\r\n /* document.querySelector(config.screen).innerHTML = html;\r\n  render(config.screen, {});\r\n  emit(e);*/\r\n});\r\n\r\n","vnjs.on('settings', function(){\r\n   this.parse({'screen': \"settings\", \"scene\":\"background\"})\r\n});","vnjs.on('start-game', function(){\r\n\r\ndocument\r\n  .querySelector(\"#dialog_box\")\r\n  .addEventListener('mousedown', this.next);\r\n/*\r\nlet {ctx, game, catalog, parse } = this;\r\nlet dialogBox = document.querySelector('#dialog_box');\r\n  \r\n    let screen = document.querySelector(game.init.screen);\r\n     parse(ctx, catalog);   \r\n    dialogBox.addEventListener('mousedown', function(){\r\n        parse(ctx, catalog);\r\n    });*/\r\n/*var fps = 15;\r\nfunction draw() {\r\n    setTimeout(function() {\r\n        requestAnimationFrame(draw,screen);\r\n        // Drawing code goes here\r\n    }, 1000 / fps);\r\n};\r\ndraw();\r\nconsole.log('fps: '+fps);*/\r\n});"]}